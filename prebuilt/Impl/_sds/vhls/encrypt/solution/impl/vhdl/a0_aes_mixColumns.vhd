-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.1
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity a0_aes_mixColumns is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_buf_r_AWVALID : OUT STD_LOGIC;
    m_axi_buf_r_AWREADY : IN STD_LOGIC;
    m_axi_buf_r_AWADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_buf_r_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_buf_r_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_buf_r_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_buf_r_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_buf_r_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_buf_r_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_buf_r_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_buf_r_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_buf_r_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_buf_r_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_buf_r_WVALID : OUT STD_LOGIC;
    m_axi_buf_r_WREADY : IN STD_LOGIC;
    m_axi_buf_r_WDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_buf_r_WSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_buf_r_WLAST : OUT STD_LOGIC;
    m_axi_buf_r_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_buf_r_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_buf_r_ARVALID : OUT STD_LOGIC;
    m_axi_buf_r_ARREADY : IN STD_LOGIC;
    m_axi_buf_r_ARADDR : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_buf_r_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_buf_r_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_buf_r_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_buf_r_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_buf_r_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_buf_r_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_buf_r_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_buf_r_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_buf_r_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_buf_r_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_buf_r_RVALID : IN STD_LOGIC;
    m_axi_buf_r_RREADY : OUT STD_LOGIC;
    m_axi_buf_r_RDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    m_axi_buf_r_RLAST : IN STD_LOGIC;
    m_axi_buf_r_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_buf_r_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_buf_r_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_buf_r_BVALID : IN STD_LOGIC;
    m_axi_buf_r_BREADY : OUT STD_LOGIC;
    m_axi_buf_r_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_buf_r_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_buf_r_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    buf_offset : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of a0_aes_mixColumns is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000100";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000001000";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000010000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000100000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000001000000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000010000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (20 downto 0) := "000000000000100000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (20 downto 0) := "000000000001000000000";
    constant ap_ST_fsm_pp0_stage9 : STD_LOGIC_VECTOR (20 downto 0) := "000000000010000000000";
    constant ap_ST_fsm_pp0_stage10 : STD_LOGIC_VECTOR (20 downto 0) := "000000000100000000000";
    constant ap_ST_fsm_pp0_stage11 : STD_LOGIC_VECTOR (20 downto 0) := "000000001000000000000";
    constant ap_ST_fsm_pp0_stage12 : STD_LOGIC_VECTOR (20 downto 0) := "000000010000000000000";
    constant ap_ST_fsm_pp0_stage13 : STD_LOGIC_VECTOR (20 downto 0) := "000000100000000000000";
    constant ap_ST_fsm_pp0_stage14 : STD_LOGIC_VECTOR (20 downto 0) := "000001000000000000000";
    constant ap_ST_fsm_pp0_stage15 : STD_LOGIC_VECTOR (20 downto 0) := "000010000000000000000";
    constant ap_ST_fsm_pp0_stage16 : STD_LOGIC_VECTOR (20 downto 0) := "000100000000000000000";
    constant ap_ST_fsm_pp0_stage17 : STD_LOGIC_VECTOR (20 downto 0) := "001000000000000000000";
    constant ap_ST_fsm_pp0_stage18 : STD_LOGIC_VECTOR (20 downto 0) := "010000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (20 downto 0) := "100000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv8_1B : STD_LOGIC_VECTOR (7 downto 0) := "00011011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (20 downto 0) := "000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal buf_r_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal tmp_reg_452 : STD_LOGIC_VECTOR (0 downto 0);
    signal buf_r_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal ap_block_pp0_stage8 : BOOLEAN;
    signal buf_r_blk_n_AW : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage11 : signal is "none";
    signal ap_block_pp0_stage11 : BOOLEAN;
    signal buf_r_blk_n_W : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage12 : signal is "none";
    signal ap_block_pp0_stage12 : BOOLEAN;
    signal buf_r_blk_n_B : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage17 : signal is "none";
    signal ap_block_pp0_stage17 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage9 : signal is "none";
    signal ap_block_pp0_stage9 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage13 : signal is "none";
    signal ap_block_pp0_stage13 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage14 : signal is "none";
    signal ap_block_pp0_stage14 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage10 : signal is "none";
    signal ap_block_pp0_stage10 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage15 : signal is "none";
    signal ap_block_pp0_stage15 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage16 : signal is "none";
    signal ap_block_pp0_stage16 : BOOLEAN;
    signal ap_reg_pp0_iter1_tmp_reg_452 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage18 : signal is "none";
    signal ap_block_pp0_stage18 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal i_reg_164 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_fu_175_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state21_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal buf_addr_reg_456 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_addr_25_reg_463 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_addr_26_reg_470 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_addr_27_reg_477 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_2_fu_265_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_2_reg_484 : STD_LOGIC_VECTOR (4 downto 0);
    signal a_reg_489 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state10_pp0_stage8_iter0 : BOOLEAN;
    signal ap_block_pp0_stage8_11001 : BOOLEAN;
    signal b_reg_496 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state11_pp0_stage9_iter0 : BOOLEAN;
    signal ap_block_pp0_stage9_11001 : BOOLEAN;
    signal c_reg_503 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state12_pp0_stage10_iter0 : BOOLEAN;
    signal ap_block_pp0_stage10_11001 : BOOLEAN;
    signal x_assign_fu_271_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_assign_reg_511 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state13_pp0_stage11_iter0 : BOOLEAN;
    signal ap_sig_ioackin_m_axi_buf_r_AWREADY : STD_LOGIC;
    signal ap_block_state13_io : BOOLEAN;
    signal ap_block_pp0_stage11_11001 : BOOLEAN;
    signal tmp_6_fu_275_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_6_reg_517 : STD_LOGIC_VECTOR (7 downto 0);
    signal d_reg_523 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state14_pp0_stage12_iter0 : BOOLEAN;
    signal ap_sig_ioackin_m_axi_buf_r_WREADY : STD_LOGIC;
    signal ap_block_state14_io : BOOLEAN;
    signal ap_block_pp0_stage12_11001 : BOOLEAN;
    signal e_fu_280_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal e_reg_529 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_5_fu_360_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_5_reg_535 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state15_pp0_stage13_iter0 : BOOLEAN;
    signal ap_block_state15_io : BOOLEAN;
    signal ap_block_pp0_stage13_11001 : BOOLEAN;
    signal tmp_7_fu_402_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_reg_540 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_fu_439_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_reg_545 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_block_state20_pp0_stage18_iter0 : BOOLEAN;
    signal ap_block_state20_io : BOOLEAN;
    signal ap_block_pp0_stage18_subdone : BOOLEAN;
    signal ap_block_state6_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state25_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal i_phi_fu_168_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal sum_fu_191_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum1_fu_212_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum2_fu_233_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sum3_fu_254_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_reg_ioackin_m_axi_buf_r_ARREADY : STD_LOGIC := '0';
    signal ap_sig_ioackin_m_axi_buf_r_ARREADY : STD_LOGIC;
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state22_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_01001 : BOOLEAN;
    signal ap_block_state3_io : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_reg_ioackin_m_axi_buf_r_AWREADY : STD_LOGIC := '0';
    signal ap_block_pp0_stage11_01001 : BOOLEAN;
    signal ap_block_state19_pp0_stage17_iter0 : BOOLEAN;
    signal ap_block_state19_io : BOOLEAN;
    signal ap_block_pp0_stage17_11001 : BOOLEAN;
    signal ap_block_state4_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state23_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_pp0_stage2_01001 : BOOLEAN;
    signal ap_block_state4_io : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_block_pp0_stage13_01001 : BOOLEAN;
    signal ap_block_state5_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state24_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_pp0_stage3_01001 : BOOLEAN;
    signal ap_block_state5_io : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal ap_block_state17_pp0_stage15_iter0 : BOOLEAN;
    signal ap_block_pp0_stage15_01001 : BOOLEAN;
    signal ap_block_state17_io : BOOLEAN;
    signal ap_block_pp0_stage15_11001 : BOOLEAN;
    signal ap_block_state7_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_pp0_stage5_01001 : BOOLEAN;
    signal ap_block_state7_io : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal ap_block_pp0_stage17_01001 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal ap_reg_ioackin_m_axi_buf_r_WREADY : STD_LOGIC := '0';
    signal ap_block_pp0_stage12_01001 : BOOLEAN;
    signal tmp_9_fu_317_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state16_pp0_stage14_iter0 : BOOLEAN;
    signal ap_block_pp0_stage14_01001 : BOOLEAN;
    signal ap_block_state16_io : BOOLEAN;
    signal ap_block_pp0_stage14_11001 : BOOLEAN;
    signal ap_block_state18_pp0_stage16_iter0 : BOOLEAN;
    signal ap_block_pp0_stage16_01001 : BOOLEAN;
    signal ap_block_state18_io : BOOLEAN;
    signal ap_block_pp0_stage16_11001 : BOOLEAN;
    signal ap_block_pp0_stage18_01001 : BOOLEAN;
    signal ap_block_pp0_stage18_11001 : BOOLEAN;
    signal tmp_s_fu_183_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_187_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_2_fu_202_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_2_cast_fu_208_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_223_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_3_cast_fu_229_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_244_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_4_cast_fu_250_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_fu_292_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_11_fu_285_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_i_fu_297_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_4_i_fu_303_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp1_fu_311_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_assign_1_fu_323_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_14_fu_335_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_13_fu_327_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_i1_fu_341_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_4_i1_fu_347_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp2_fu_355_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_assign_2_fu_365_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_16_fu_377_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_15_fu_369_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_i2_fu_383_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_4_i2_fu_389_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp3_fu_397_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal x_assign_3_fu_407_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_18_fu_419_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_17_fu_411_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_i3_fu_425_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_4_i3_fu_431_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (20 downto 0);
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_state8_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_block_state9_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_block_pp0_stage8_subdone : BOOLEAN;
    signal ap_block_pp0_stage9_subdone : BOOLEAN;
    signal ap_block_pp0_stage10_subdone : BOOLEAN;
    signal ap_block_pp0_stage11_subdone : BOOLEAN;
    signal ap_block_pp0_stage12_subdone : BOOLEAN;
    signal ap_block_pp0_stage13_subdone : BOOLEAN;
    signal ap_block_pp0_stage14_subdone : BOOLEAN;
    signal ap_block_pp0_stage15_subdone : BOOLEAN;
    signal ap_block_pp0_stage16_subdone : BOOLEAN;
    signal ap_block_pp0_stage17_subdone : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_967 : BOOLEAN;
    signal ap_condition_974 : BOOLEAN;
    signal ap_condition_981 : BOOLEAN;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_subdone = ap_const_boolean_0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (((ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_block_pp0_stage18_subdone = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_block_pp0_stage4_subdone = ap_const_boolean_0))))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_condition_pp0_exit_iter0_state2 xor ap_const_logic_1);
                elsif ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_block_pp0_stage18_subdone = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_block_pp0_stage4_subdone = ap_const_boolean_0)))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_m_axi_buf_r_ARREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_m_axi_buf_r_ARREADY <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_block_pp0_stage1_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_block_pp0_stage5_11001 = ap_const_boolean_0)))) then 
                    ap_reg_ioackin_m_axi_buf_r_ARREADY <= ap_const_logic_0;
                elsif ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = m_axi_buf_r_ARREADY) and (ap_block_pp0_stage1_01001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = m_axi_buf_r_ARREADY) and (ap_block_pp0_stage2_01001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_1 = m_axi_buf_r_ARREADY) and (ap_block_pp0_stage3_01001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_1 = m_axi_buf_r_ARREADY) and (ap_block_pp0_stage5_01001 = ap_const_boolean_0)))) then 
                    ap_reg_ioackin_m_axi_buf_r_ARREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_m_axi_buf_r_AWREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_m_axi_buf_r_AWREADY <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_block_pp0_stage11_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_block_pp0_stage17_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_block_pp0_stage13_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_block_pp0_stage15_11001 = ap_const_boolean_0)))) then 
                    ap_reg_ioackin_m_axi_buf_r_AWREADY <= ap_const_logic_0;
                elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_logic_1 = m_axi_buf_r_AWREADY) and (ap_block_pp0_stage11_01001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_logic_1 = m_axi_buf_r_AWREADY) and (ap_block_pp0_stage13_01001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_logic_1 = m_axi_buf_r_AWREADY) and (ap_block_pp0_stage15_01001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_logic_1 = m_axi_buf_r_AWREADY) and (ap_block_pp0_stage17_01001 = ap_const_boolean_0)))) then 
                    ap_reg_ioackin_m_axi_buf_r_AWREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_reg_ioackin_m_axi_buf_r_WREADY_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_reg_ioackin_m_axi_buf_r_WREADY <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_block_pp0_stage12_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_block_pp0_stage14_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_block_pp0_stage16_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_block_pp0_stage18_11001 = ap_const_boolean_0)))) then 
                    ap_reg_ioackin_m_axi_buf_r_WREADY <= ap_const_logic_0;
                elsif ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_logic_1 = m_axi_buf_r_WREADY) and (ap_block_pp0_stage12_01001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_logic_1 = m_axi_buf_r_WREADY) and (ap_block_pp0_stage14_01001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_logic_1 = m_axi_buf_r_WREADY) and (ap_block_pp0_stage16_01001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_logic_1 = m_axi_buf_r_WREADY) and (ap_block_pp0_stage18_01001 = ap_const_boolean_0)))) then 
                    ap_reg_ioackin_m_axi_buf_r_WREADY <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    i_reg_164_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0))) then 
                i_reg_164 <= i_2_reg_484;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_reg_164 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_block_pp0_stage8_11001 = ap_const_boolean_0))) then
                a_reg_489 <= m_axi_buf_r_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0))) then
                ap_reg_pp0_iter1_tmp_reg_452 <= tmp_reg_452;
                tmp_reg_452 <= i_phi_fu_168_p4(4 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_block_pp0_stage9_11001 = ap_const_boolean_0))) then
                b_reg_496 <= m_axi_buf_r_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_lv1_0 = tmp_fu_175_p3))) then
                buf_addr_25_reg_463 <= sum1_fu_212_p2;
                buf_addr_26_reg_470 <= sum2_fu_233_p2;
                buf_addr_27_reg_477 <= sum3_fu_254_p2;
                buf_addr_reg_456 <= sum_fu_191_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_block_pp0_stage10_11001 = ap_const_boolean_0))) then
                c_reg_503 <= m_axi_buf_r_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_block_pp0_stage12_11001 = ap_const_boolean_0))) then
                d_reg_523 <= m_axi_buf_r_RDATA;
                e_reg_529 <= e_fu_280_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0) and (ap_const_lv1_0 = tmp_fu_175_p3))) then
                i_2_reg_484 <= i_2_fu_265_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_block_pp0_stage13_11001 = ap_const_boolean_0))) then
                tmp_5_reg_535 <= tmp_5_fu_360_p2;
                tmp_7_reg_540 <= tmp_7_fu_402_p2;
                tmp_8_reg_545 <= tmp_8_fu_439_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_block_pp0_stage11_11001 = ap_const_boolean_0))) then
                tmp_6_reg_517 <= tmp_6_fu_275_p2;
                x_assign_reg_511 <= x_assign_fu_271_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, tmp_fu_175_p3, ap_block_pp0_stage0_subdone, ap_block_pp0_stage18_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone, ap_block_pp0_stage7_subdone, ap_block_pp0_stage8_subdone, ap_block_pp0_stage9_subdone, ap_block_pp0_stage10_subdone, ap_block_pp0_stage11_subdone, ap_block_pp0_stage12_subdone, ap_block_pp0_stage13_subdone, ap_block_pp0_stage14_subdone, ap_block_pp0_stage15_subdone, ap_block_pp0_stage16_subdone, ap_block_pp0_stage17_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (((ap_block_pp0_stage0_subdone = ap_const_boolean_0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_block_pp0_stage0_subdone = ap_const_boolean_0) and (tmp_fu_175_p3 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_block_pp0_stage0_subdone = ap_const_boolean_0) and (tmp_fu_175_p3 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_block_pp0_stage1_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_block_pp0_stage2_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_block_pp0_stage3_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if (((ap_block_pp0_stage4_subdone = ap_const_boolean_0) and not(((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_block_pp0_stage4_subdone = ap_const_boolean_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                elsif (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_block_pp0_stage4_subdone = ap_const_boolean_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_block_pp0_stage5_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_block_pp0_stage6_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_block_pp0_stage7_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_pp0_stage8 => 
                if ((ap_block_pp0_stage8_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                end if;
            when ap_ST_fsm_pp0_stage9 => 
                if ((ap_block_pp0_stage9_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                end if;
            when ap_ST_fsm_pp0_stage10 => 
                if ((ap_block_pp0_stage10_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                end if;
            when ap_ST_fsm_pp0_stage11 => 
                if ((ap_block_pp0_stage11_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                end if;
            when ap_ST_fsm_pp0_stage12 => 
                if ((ap_block_pp0_stage12_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                end if;
            when ap_ST_fsm_pp0_stage13 => 
                if ((ap_block_pp0_stage13_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                end if;
            when ap_ST_fsm_pp0_stage14 => 
                if ((ap_block_pp0_stage14_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                end if;
            when ap_ST_fsm_pp0_stage15 => 
                if ((ap_block_pp0_stage15_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage16;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                end if;
            when ap_ST_fsm_pp0_stage16 => 
                if ((ap_block_pp0_stage16_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage17;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage16;
                end if;
            when ap_ST_fsm_pp0_stage17 => 
                if ((ap_block_pp0_stage17_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage18;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage17;
                end if;
            when ap_ST_fsm_pp0_stage18 => 
                if ((ap_block_pp0_stage18_subdone = ap_const_boolean_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage18;
                end if;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage10 <= ap_CS_fsm(11);
    ap_CS_fsm_pp0_stage11 <= ap_CS_fsm(12);
    ap_CS_fsm_pp0_stage12 <= ap_CS_fsm(13);
    ap_CS_fsm_pp0_stage13 <= ap_CS_fsm(14);
    ap_CS_fsm_pp0_stage14 <= ap_CS_fsm(15);
    ap_CS_fsm_pp0_stage15 <= ap_CS_fsm(16);
    ap_CS_fsm_pp0_stage16 <= ap_CS_fsm(17);
    ap_CS_fsm_pp0_stage17 <= ap_CS_fsm(18);
    ap_CS_fsm_pp0_stage18 <= ap_CS_fsm(19);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(9);
    ap_CS_fsm_pp0_stage9 <= ap_CS_fsm(10);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state26 <= ap_CS_fsm(20);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(m_axi_buf_r_BVALID, tmp_reg_452, ap_enable_reg_pp0_iter1)
    begin
                ap_block_pp0_stage0_11001 <= ((tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_0 = m_axi_buf_r_BVALID));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(m_axi_buf_r_BVALID, tmp_reg_452, ap_enable_reg_pp0_iter1)
    begin
                ap_block_pp0_stage0_subdone <= ((tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_logic_0 = m_axi_buf_r_BVALID));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage10_11001_assign_proc : process(m_axi_buf_r_RVALID, ap_enable_reg_pp0_iter0, tmp_reg_452)
    begin
                ap_block_pp0_stage10_11001 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_0 = m_axi_buf_r_RVALID));
    end process;


    ap_block_pp0_stage10_subdone_assign_proc : process(m_axi_buf_r_RVALID, ap_enable_reg_pp0_iter0, tmp_reg_452)
    begin
                ap_block_pp0_stage10_subdone <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_0 = m_axi_buf_r_RVALID));
    end process;

        ap_block_pp0_stage11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage11_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage11_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state13_io)
    begin
                ap_block_pp0_stage11_11001 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state13_io));
    end process;


    ap_block_pp0_stage11_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state13_io)
    begin
                ap_block_pp0_stage11_subdone <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state13_io));
    end process;

        ap_block_pp0_stage12 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage12_01001_assign_proc : process(m_axi_buf_r_RVALID, ap_enable_reg_pp0_iter0, tmp_reg_452)
    begin
                ap_block_pp0_stage12_01001 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_0 = m_axi_buf_r_RVALID));
    end process;


    ap_block_pp0_stage12_11001_assign_proc : process(m_axi_buf_r_RVALID, ap_enable_reg_pp0_iter0, tmp_reg_452, ap_block_state14_io)
    begin
                ap_block_pp0_stage12_11001 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (((tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_0 = m_axi_buf_r_RVALID)) or (ap_const_boolean_1 = ap_block_state14_io)));
    end process;


    ap_block_pp0_stage12_subdone_assign_proc : process(m_axi_buf_r_RVALID, ap_enable_reg_pp0_iter0, tmp_reg_452, ap_block_state14_io)
    begin
                ap_block_pp0_stage12_subdone <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (((tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_0 = m_axi_buf_r_RVALID)) or (ap_const_boolean_1 = ap_block_state14_io)));
    end process;

        ap_block_pp0_stage13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage13_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage13_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state15_io)
    begin
                ap_block_pp0_stage13_11001 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state15_io));
    end process;


    ap_block_pp0_stage13_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state15_io)
    begin
                ap_block_pp0_stage13_subdone <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state15_io));
    end process;

        ap_block_pp0_stage14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage14_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage14_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state16_io)
    begin
                ap_block_pp0_stage14_11001 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state16_io));
    end process;


    ap_block_pp0_stage14_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state16_io)
    begin
                ap_block_pp0_stage14_subdone <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state16_io));
    end process;

        ap_block_pp0_stage15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage15_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage15_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state17_io)
    begin
                ap_block_pp0_stage15_11001 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state17_io));
    end process;


    ap_block_pp0_stage15_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state17_io)
    begin
                ap_block_pp0_stage15_subdone <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state17_io));
    end process;

        ap_block_pp0_stage16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage16_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage16_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state18_io)
    begin
                ap_block_pp0_stage16_11001 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state18_io));
    end process;


    ap_block_pp0_stage16_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state18_io)
    begin
                ap_block_pp0_stage16_subdone <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state18_io));
    end process;

        ap_block_pp0_stage17 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage17_01001_assign_proc : process(m_axi_buf_r_BVALID, ap_enable_reg_pp0_iter0, tmp_reg_452)
    begin
                ap_block_pp0_stage17_01001 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_0 = m_axi_buf_r_BVALID));
    end process;


    ap_block_pp0_stage17_11001_assign_proc : process(m_axi_buf_r_BVALID, ap_enable_reg_pp0_iter0, tmp_reg_452, ap_block_state19_io)
    begin
                ap_block_pp0_stage17_11001 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (((tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_0 = m_axi_buf_r_BVALID)) or (ap_const_boolean_1 = ap_block_state19_io)));
    end process;


    ap_block_pp0_stage17_subdone_assign_proc : process(m_axi_buf_r_BVALID, ap_enable_reg_pp0_iter0, tmp_reg_452, ap_block_state19_io)
    begin
                ap_block_pp0_stage17_subdone <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (((tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_0 = m_axi_buf_r_BVALID)) or (ap_const_boolean_1 = ap_block_state19_io)));
    end process;

        ap_block_pp0_stage18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage18_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage18_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state20_io)
    begin
                ap_block_pp0_stage18_11001 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state20_io));
    end process;


    ap_block_pp0_stage18_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state20_io)
    begin
                ap_block_pp0_stage18_subdone <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state20_io));
    end process;

        ap_block_pp0_stage1_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state3_io)
    begin
                ap_block_pp0_stage1_11001 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state3_io));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state3_io)
    begin
                ap_block_pp0_stage1_subdone <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state3_io));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_01001_assign_proc : process(m_axi_buf_r_BVALID, ap_enable_reg_pp0_iter1, ap_reg_pp0_iter1_tmp_reg_452)
    begin
                ap_block_pp0_stage2_01001 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_reg_pp0_iter1_tmp_reg_452) and (ap_const_logic_0 = m_axi_buf_r_BVALID));
    end process;


    ap_block_pp0_stage2_11001_assign_proc : process(m_axi_buf_r_BVALID, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_reg_pp0_iter1_tmp_reg_452, ap_block_state4_io)
    begin
                ap_block_pp0_stage2_11001 <= (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_reg_pp0_iter1_tmp_reg_452) and (ap_const_logic_0 = m_axi_buf_r_BVALID)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state4_io)));
    end process;


    ap_block_pp0_stage2_subdone_assign_proc : process(m_axi_buf_r_BVALID, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_reg_pp0_iter1_tmp_reg_452, ap_block_state4_io)
    begin
                ap_block_pp0_stage2_subdone <= (((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_reg_pp0_iter1_tmp_reg_452) and (ap_const_logic_0 = m_axi_buf_r_BVALID)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state4_io)));
    end process;

        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage3_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state5_io)
    begin
                ap_block_pp0_stage3_11001 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state5_io));
    end process;


    ap_block_pp0_stage3_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state5_io)
    begin
                ap_block_pp0_stage3_subdone <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state5_io));
    end process;

        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage4_11001_assign_proc : process(m_axi_buf_r_BVALID, ap_enable_reg_pp0_iter1, ap_reg_pp0_iter1_tmp_reg_452)
    begin
                ap_block_pp0_stage4_11001 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_reg_pp0_iter1_tmp_reg_452) and (ap_const_logic_0 = m_axi_buf_r_BVALID));
    end process;


    ap_block_pp0_stage4_subdone_assign_proc : process(m_axi_buf_r_BVALID, ap_enable_reg_pp0_iter1, ap_reg_pp0_iter1_tmp_reg_452)
    begin
                ap_block_pp0_stage4_subdone <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_reg_pp0_iter1_tmp_reg_452) and (ap_const_logic_0 = m_axi_buf_r_BVALID));
    end process;

        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage5_11001_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state7_io)
    begin
                ap_block_pp0_stage5_11001 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state7_io));
    end process;


    ap_block_pp0_stage5_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, ap_block_state7_io)
    begin
                ap_block_pp0_stage5_subdone <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_const_boolean_1 = ap_block_state7_io));
    end process;

        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage8_11001_assign_proc : process(m_axi_buf_r_RVALID, ap_enable_reg_pp0_iter0, tmp_reg_452)
    begin
                ap_block_pp0_stage8_11001 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_0 = m_axi_buf_r_RVALID));
    end process;


    ap_block_pp0_stage8_subdone_assign_proc : process(m_axi_buf_r_RVALID, ap_enable_reg_pp0_iter0, tmp_reg_452)
    begin
                ap_block_pp0_stage8_subdone <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_0 = m_axi_buf_r_RVALID));
    end process;

        ap_block_pp0_stage9 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage9_11001_assign_proc : process(m_axi_buf_r_RVALID, ap_enable_reg_pp0_iter0, tmp_reg_452)
    begin
                ap_block_pp0_stage9_11001 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_0 = m_axi_buf_r_RVALID));
    end process;


    ap_block_pp0_stage9_subdone_assign_proc : process(m_axi_buf_r_RVALID, ap_enable_reg_pp0_iter0, tmp_reg_452)
    begin
                ap_block_pp0_stage9_subdone <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_0 = m_axi_buf_r_RVALID));
    end process;


    ap_block_state10_pp0_stage8_iter0_assign_proc : process(m_axi_buf_r_RVALID, tmp_reg_452)
    begin
                ap_block_state10_pp0_stage8_iter0 <= ((tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_0 = m_axi_buf_r_RVALID));
    end process;


    ap_block_state11_pp0_stage9_iter0_assign_proc : process(m_axi_buf_r_RVALID, tmp_reg_452)
    begin
                ap_block_state11_pp0_stage9_iter0 <= ((tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_0 = m_axi_buf_r_RVALID));
    end process;


    ap_block_state12_pp0_stage10_iter0_assign_proc : process(m_axi_buf_r_RVALID, tmp_reg_452)
    begin
                ap_block_state12_pp0_stage10_iter0 <= ((tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_0 = m_axi_buf_r_RVALID));
    end process;


    ap_block_state13_io_assign_proc : process(tmp_reg_452, ap_sig_ioackin_m_axi_buf_r_AWREADY)
    begin
                ap_block_state13_io <= ((tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_buf_r_AWREADY));
    end process;

        ap_block_state13_pp0_stage11_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state14_io_assign_proc : process(tmp_reg_452, ap_sig_ioackin_m_axi_buf_r_WREADY)
    begin
                ap_block_state14_io <= ((tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_buf_r_WREADY));
    end process;


    ap_block_state14_pp0_stage12_iter0_assign_proc : process(m_axi_buf_r_RVALID, tmp_reg_452)
    begin
                ap_block_state14_pp0_stage12_iter0 <= ((tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_0 = m_axi_buf_r_RVALID));
    end process;


    ap_block_state15_io_assign_proc : process(tmp_reg_452, ap_sig_ioackin_m_axi_buf_r_AWREADY)
    begin
                ap_block_state15_io <= ((tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_buf_r_AWREADY));
    end process;

        ap_block_state15_pp0_stage13_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state16_io_assign_proc : process(tmp_reg_452, ap_sig_ioackin_m_axi_buf_r_WREADY)
    begin
                ap_block_state16_io <= ((tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_buf_r_WREADY));
    end process;

        ap_block_state16_pp0_stage14_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state17_io_assign_proc : process(tmp_reg_452, ap_sig_ioackin_m_axi_buf_r_AWREADY)
    begin
                ap_block_state17_io <= ((tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_buf_r_AWREADY));
    end process;

        ap_block_state17_pp0_stage15_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state18_io_assign_proc : process(tmp_reg_452, ap_sig_ioackin_m_axi_buf_r_WREADY)
    begin
                ap_block_state18_io <= ((tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_buf_r_WREADY));
    end process;

        ap_block_state18_pp0_stage16_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state19_io_assign_proc : process(tmp_reg_452, ap_sig_ioackin_m_axi_buf_r_AWREADY)
    begin
                ap_block_state19_io <= ((tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_buf_r_AWREADY));
    end process;


    ap_block_state19_pp0_stage17_iter0_assign_proc : process(m_axi_buf_r_BVALID, tmp_reg_452)
    begin
                ap_block_state19_pp0_stage17_iter0 <= ((tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_0 = m_axi_buf_r_BVALID));
    end process;


    ap_block_state20_io_assign_proc : process(tmp_reg_452, ap_sig_ioackin_m_axi_buf_r_WREADY)
    begin
                ap_block_state20_io <= ((tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_buf_r_WREADY));
    end process;

        ap_block_state20_pp0_stage18_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state21_pp0_stage0_iter1_assign_proc : process(m_axi_buf_r_BVALID, tmp_reg_452)
    begin
                ap_block_state21_pp0_stage0_iter1 <= ((tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_0 = m_axi_buf_r_BVALID));
    end process;

        ap_block_state22_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state23_pp0_stage2_iter1_assign_proc : process(m_axi_buf_r_BVALID, ap_reg_pp0_iter1_tmp_reg_452)
    begin
                ap_block_state23_pp0_stage2_iter1 <= ((ap_const_lv1_0 = ap_reg_pp0_iter1_tmp_reg_452) and (ap_const_logic_0 = m_axi_buf_r_BVALID));
    end process;

        ap_block_state24_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state25_pp0_stage4_iter1_assign_proc : process(m_axi_buf_r_BVALID, ap_reg_pp0_iter1_tmp_reg_452)
    begin
                ap_block_state25_pp0_stage4_iter1 <= ((ap_const_lv1_0 = ap_reg_pp0_iter1_tmp_reg_452) and (ap_const_logic_0 = m_axi_buf_r_BVALID));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_io_assign_proc : process(tmp_reg_452, ap_sig_ioackin_m_axi_buf_r_ARREADY)
    begin
                ap_block_state3_io <= ((tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_buf_r_ARREADY));
    end process;

        ap_block_state3_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state4_io_assign_proc : process(tmp_reg_452, ap_sig_ioackin_m_axi_buf_r_ARREADY)
    begin
                ap_block_state4_io <= ((tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_buf_r_ARREADY));
    end process;

        ap_block_state4_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_io_assign_proc : process(tmp_reg_452, ap_sig_ioackin_m_axi_buf_r_ARREADY)
    begin
                ap_block_state5_io <= ((tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_buf_r_ARREADY));
    end process;

        ap_block_state5_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state7_io_assign_proc : process(tmp_reg_452, ap_sig_ioackin_m_axi_buf_r_ARREADY)
    begin
                ap_block_state7_io <= ((tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_0 = ap_sig_ioackin_m_axi_buf_r_ARREADY));
    end process;

        ap_block_state7_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_967_assign_proc : process(ap_enable_reg_pp0_iter0, tmp_reg_452, ap_reg_ioackin_m_axi_buf_r_ARREADY)
    begin
                ap_condition_967 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_buf_r_ARREADY));
    end process;


    ap_condition_974_assign_proc : process(ap_enable_reg_pp0_iter0, tmp_reg_452, ap_reg_ioackin_m_axi_buf_r_AWREADY)
    begin
                ap_condition_974 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_buf_r_AWREADY));
    end process;


    ap_condition_981_assign_proc : process(ap_enable_reg_pp0_iter0, tmp_reg_452, ap_reg_ioackin_m_axi_buf_r_WREADY)
    begin
                ap_condition_981 <= ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_buf_r_WREADY));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(tmp_fu_175_p3)
    begin
        if ((tmp_fu_175_p3 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state26)
    begin
        if ((((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1)) or (ap_const_logic_1 = ap_CS_fsm_state26))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_0 = ap_start) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_logic_0 = ap_enable_reg_pp0_iter0) and (ap_const_logic_0 = ap_enable_reg_pp0_iter1))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_ioackin_m_axi_buf_r_ARREADY_assign_proc : process(m_axi_buf_r_ARREADY, ap_reg_ioackin_m_axi_buf_r_ARREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_m_axi_buf_r_ARREADY)) then 
            ap_sig_ioackin_m_axi_buf_r_ARREADY <= m_axi_buf_r_ARREADY;
        else 
            ap_sig_ioackin_m_axi_buf_r_ARREADY <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ioackin_m_axi_buf_r_AWREADY_assign_proc : process(m_axi_buf_r_AWREADY, ap_reg_ioackin_m_axi_buf_r_AWREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_m_axi_buf_r_AWREADY)) then 
            ap_sig_ioackin_m_axi_buf_r_AWREADY <= m_axi_buf_r_AWREADY;
        else 
            ap_sig_ioackin_m_axi_buf_r_AWREADY <= ap_const_logic_1;
        end if; 
    end process;


    ap_sig_ioackin_m_axi_buf_r_WREADY_assign_proc : process(m_axi_buf_r_WREADY, ap_reg_ioackin_m_axi_buf_r_WREADY)
    begin
        if ((ap_const_logic_0 = ap_reg_ioackin_m_axi_buf_r_WREADY)) then 
            ap_sig_ioackin_m_axi_buf_r_WREADY <= m_axi_buf_r_WREADY;
        else 
            ap_sig_ioackin_m_axi_buf_r_WREADY <= ap_const_logic_1;
        end if; 
    end process;


    buf_r_blk_n_AR_assign_proc : process(m_axi_buf_r_ARREADY, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, tmp_reg_452, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (ap_block_pp0_stage1 = ap_const_boolean_0) and (tmp_reg_452 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_block_pp0_stage5 = ap_const_boolean_0)))) then 
            buf_r_blk_n_AR <= m_axi_buf_r_ARREADY;
        else 
            buf_r_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    buf_r_blk_n_AW_assign_proc : process(m_axi_buf_r_AWREADY, ap_enable_reg_pp0_iter0, tmp_reg_452, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_block_pp0_stage11 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_block_pp0_stage17 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_block_pp0_stage13 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_block_pp0_stage15 = ap_const_boolean_0)))) then 
            buf_r_blk_n_AW <= m_axi_buf_r_AWREADY;
        else 
            buf_r_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    buf_r_blk_n_B_assign_proc : process(m_axi_buf_r_BVALID, ap_enable_reg_pp0_iter0, tmp_reg_452, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_reg_pp0_iter1_tmp_reg_452, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_block_pp0_stage17 = ap_const_boolean_0)) or ((tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage0 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2 = ap_const_boolean_0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_reg_pp0_iter1_tmp_reg_452)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_reg_pp0_iter1_tmp_reg_452) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_block_pp0_stage4 = ap_const_boolean_0)))) then 
            buf_r_blk_n_B <= m_axi_buf_r_BVALID;
        else 
            buf_r_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    buf_r_blk_n_R_assign_proc : process(m_axi_buf_r_RVALID, ap_enable_reg_pp0_iter0, tmp_reg_452, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_block_pp0_stage8 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_block_pp0_stage12 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_block_pp0_stage9 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_block_pp0_stage10 = ap_const_boolean_0)))) then 
            buf_r_blk_n_R <= m_axi_buf_r_RVALID;
        else 
            buf_r_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    buf_r_blk_n_W_assign_proc : process(m_axi_buf_r_WREADY, ap_enable_reg_pp0_iter0, tmp_reg_452, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_block_pp0_stage12 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_block_pp0_stage14 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_block_pp0_stage16 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_block_pp0_stage18 = ap_const_boolean_0)))) then 
            buf_r_blk_n_W <= m_axi_buf_r_WREADY;
        else 
            buf_r_blk_n_W <= ap_const_logic_1;
        end if; 
    end process;

    e_fu_280_p2 <= (m_axi_buf_r_RDATA xor tmp_6_reg_517);
    i_2_fu_265_p2 <= std_logic_vector(unsigned(ap_const_lv5_4) + unsigned(i_phi_fu_168_p4));

    i_phi_fu_168_p4_assign_proc : process(tmp_reg_452, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, i_reg_164, i_2_reg_484)
    begin
        if (((tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage0 = ap_const_boolean_0))) then 
            i_phi_fu_168_p4 <= i_2_reg_484;
        else 
            i_phi_fu_168_p4 <= i_reg_164;
        end if; 
    end process;


    m_axi_buf_r_ARADDR_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, buf_addr_reg_456, buf_addr_25_reg_463, buf_addr_26_reg_470, buf_addr_27_reg_477, ap_block_pp0_stage1_01001, ap_block_pp0_stage2_01001, ap_block_pp0_stage3_01001, ap_block_pp0_stage5_01001, ap_condition_967)
    begin
        if ((ap_condition_967 = ap_const_boolean_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_block_pp0_stage5_01001 = ap_const_boolean_0))) then 
                m_axi_buf_r_ARADDR <= buf_addr_27_reg_477;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_block_pp0_stage3_01001 = ap_const_boolean_0))) then 
                m_axi_buf_r_ARADDR <= buf_addr_26_reg_470;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_block_pp0_stage2_01001 = ap_const_boolean_0))) then 
                m_axi_buf_r_ARADDR <= buf_addr_25_reg_463;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_block_pp0_stage1_01001 = ap_const_boolean_0))) then 
                m_axi_buf_r_ARADDR <= buf_addr_reg_456;
            else 
                m_axi_buf_r_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            m_axi_buf_r_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    m_axi_buf_r_ARBURST <= ap_const_lv2_0;
    m_axi_buf_r_ARCACHE <= ap_const_lv4_0;
    m_axi_buf_r_ARID <= ap_const_lv1_0;
    m_axi_buf_r_ARLEN <= ap_const_lv32_1;
    m_axi_buf_r_ARLOCK <= ap_const_lv2_0;
    m_axi_buf_r_ARPROT <= ap_const_lv3_0;
    m_axi_buf_r_ARQOS <= ap_const_lv4_0;
    m_axi_buf_r_ARREGION <= ap_const_lv4_0;
    m_axi_buf_r_ARSIZE <= ap_const_lv3_0;
    m_axi_buf_r_ARUSER <= ap_const_lv1_0;

    m_axi_buf_r_ARVALID_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, tmp_reg_452, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_reg_ioackin_m_axi_buf_r_ARREADY, ap_block_pp0_stage1_01001, ap_block_pp0_stage2_01001, ap_block_pp0_stage3_01001, ap_block_pp0_stage5_01001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_block_pp0_stage1_01001 = ap_const_boolean_0) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_buf_r_ARREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_buf_r_ARREADY) and (ap_block_pp0_stage2_01001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_buf_r_ARREADY) and (ap_block_pp0_stage3_01001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_buf_r_ARREADY) and (ap_block_pp0_stage5_01001 = ap_const_boolean_0)))) then 
            m_axi_buf_r_ARVALID <= ap_const_logic_1;
        else 
            m_axi_buf_r_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_buf_r_AWADDR_assign_proc : process(ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage15, buf_addr_reg_456, buf_addr_25_reg_463, buf_addr_26_reg_470, buf_addr_27_reg_477, ap_block_pp0_stage11_01001, ap_block_pp0_stage13_01001, ap_block_pp0_stage15_01001, ap_block_pp0_stage17_01001, ap_condition_974)
    begin
        if ((ap_condition_974 = ap_const_boolean_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_block_pp0_stage17_01001 = ap_const_boolean_0))) then 
                m_axi_buf_r_AWADDR <= buf_addr_27_reg_477;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_block_pp0_stage15_01001 = ap_const_boolean_0))) then 
                m_axi_buf_r_AWADDR <= buf_addr_26_reg_470;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_block_pp0_stage13_01001 = ap_const_boolean_0))) then 
                m_axi_buf_r_AWADDR <= buf_addr_25_reg_463;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_block_pp0_stage11_01001 = ap_const_boolean_0))) then 
                m_axi_buf_r_AWADDR <= buf_addr_reg_456;
            else 
                m_axi_buf_r_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            m_axi_buf_r_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    m_axi_buf_r_AWBURST <= ap_const_lv2_0;
    m_axi_buf_r_AWCACHE <= ap_const_lv4_0;
    m_axi_buf_r_AWID <= ap_const_lv1_0;
    m_axi_buf_r_AWLEN <= ap_const_lv32_1;
    m_axi_buf_r_AWLOCK <= ap_const_lv2_0;
    m_axi_buf_r_AWPROT <= ap_const_lv3_0;
    m_axi_buf_r_AWQOS <= ap_const_lv4_0;
    m_axi_buf_r_AWREGION <= ap_const_lv4_0;
    m_axi_buf_r_AWSIZE <= ap_const_lv3_0;
    m_axi_buf_r_AWUSER <= ap_const_lv1_0;

    m_axi_buf_r_AWVALID_assign_proc : process(ap_enable_reg_pp0_iter0, tmp_reg_452, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage15, ap_reg_ioackin_m_axi_buf_r_AWREADY, ap_block_pp0_stage11_01001, ap_block_pp0_stage13_01001, ap_block_pp0_stage15_01001, ap_block_pp0_stage17_01001)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_block_pp0_stage11_01001 = ap_const_boolean_0) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_buf_r_AWREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_buf_r_AWREADY) and (ap_block_pp0_stage13_01001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_buf_r_AWREADY) and (ap_block_pp0_stage15_01001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_buf_r_AWREADY) and (ap_block_pp0_stage17_01001 = ap_const_boolean_0)))) then 
            m_axi_buf_r_AWVALID <= ap_const_logic_1;
        else 
            m_axi_buf_r_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_buf_r_BREADY_assign_proc : process(ap_enable_reg_pp0_iter0, tmp_reg_452, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_reg_pp0_iter1_tmp_reg_452, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage0_11001, ap_block_pp0_stage17_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage4_11001)
    begin
        if ((((tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_block_pp0_stage0_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_block_pp0_stage17_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_reg_pp0_iter1_tmp_reg_452) and (ap_block_pp0_stage2_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter1) and (ap_const_lv1_0 = ap_reg_pp0_iter1_tmp_reg_452) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_block_pp0_stage4_11001 = ap_const_boolean_0)))) then 
            m_axi_buf_r_BREADY <= ap_const_logic_1;
        else 
            m_axi_buf_r_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_buf_r_RREADY_assign_proc : process(ap_enable_reg_pp0_iter0, tmp_reg_452, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage8_11001, ap_block_pp0_stage9_11001, ap_block_pp0_stage10_11001, ap_block_pp0_stage12_11001)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_block_pp0_stage8_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_block_pp0_stage9_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_block_pp0_stage10_11001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_block_pp0_stage12_11001 = ap_const_boolean_0)))) then 
            m_axi_buf_r_RREADY <= ap_const_logic_1;
        else 
            m_axi_buf_r_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_buf_r_WDATA_assign_proc : process(ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage18, tmp_5_reg_535, tmp_7_reg_540, tmp_8_reg_545, ap_block_pp0_stage12_01001, tmp_9_fu_317_p2, ap_block_pp0_stage14_01001, ap_block_pp0_stage16_01001, ap_block_pp0_stage18_01001, ap_condition_981)
    begin
        if ((ap_condition_981 = ap_const_boolean_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_block_pp0_stage18_01001 = ap_const_boolean_0))) then 
                m_axi_buf_r_WDATA <= tmp_8_reg_545;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_block_pp0_stage16_01001 = ap_const_boolean_0))) then 
                m_axi_buf_r_WDATA <= tmp_7_reg_540;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_block_pp0_stage14_01001 = ap_const_boolean_0))) then 
                m_axi_buf_r_WDATA <= tmp_5_reg_535;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_block_pp0_stage12_01001 = ap_const_boolean_0))) then 
                m_axi_buf_r_WDATA <= tmp_9_fu_317_p2;
            else 
                m_axi_buf_r_WDATA <= "XXXXXXXX";
            end if;
        else 
            m_axi_buf_r_WDATA <= "XXXXXXXX";
        end if; 
    end process;

    m_axi_buf_r_WID <= ap_const_lv1_0;
    m_axi_buf_r_WLAST <= ap_const_logic_0;
    m_axi_buf_r_WSTRB <= ap_const_lv1_1;
    m_axi_buf_r_WUSER <= ap_const_lv1_0;

    m_axi_buf_r_WVALID_assign_proc : process(ap_enable_reg_pp0_iter0, tmp_reg_452, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage18, ap_reg_ioackin_m_axi_buf_r_WREADY, ap_block_pp0_stage12_01001, ap_block_pp0_stage14_01001, ap_block_pp0_stage16_01001, ap_block_pp0_stage18_01001)
    begin
        if ((((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_block_pp0_stage12_01001 = ap_const_boolean_0) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_buf_r_WREADY)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_buf_r_WREADY) and (ap_block_pp0_stage14_01001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_buf_r_WREADY) and (ap_block_pp0_stage16_01001 = ap_const_boolean_0)) or ((ap_const_logic_1 = ap_enable_reg_pp0_iter0) and (tmp_reg_452 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_logic_0 = ap_reg_ioackin_m_axi_buf_r_WREADY) and (ap_block_pp0_stage18_01001 = ap_const_boolean_0)))) then 
            m_axi_buf_r_WVALID <= ap_const_logic_1;
        else 
            m_axi_buf_r_WVALID <= ap_const_logic_0;
        end if; 
    end process;

    sum1_fu_212_p2 <= std_logic_vector(unsigned(buf_offset) + unsigned(tmp_2_cast_fu_208_p1));
    sum2_fu_233_p2 <= std_logic_vector(unsigned(buf_offset) + unsigned(tmp_3_cast_fu_229_p1));
    sum3_fu_254_p2 <= std_logic_vector(unsigned(buf_offset) + unsigned(tmp_4_cast_fu_250_p1));
    sum_fu_191_p2 <= std_logic_vector(unsigned(buf_offset) + unsigned(tmp_s_fu_183_p1));
    tmp1_fu_311_p2 <= (tmp_4_i_fu_303_p3 xor e_fu_280_p2);
    tmp2_fu_355_p2 <= (tmp_4_i1_fu_347_p3 xor e_reg_529);
    tmp3_fu_397_p2 <= (tmp_4_i2_fu_389_p3 xor e_reg_529);
    tmp_10_fu_187_p1 <= i_phi_fu_168_p4(4 - 1 downto 0);
    tmp_11_fu_285_p3 <= x_assign_reg_511(7 downto 7);
    tmp_12_fu_292_p2 <= std_logic_vector(shift_left(unsigned(x_assign_reg_511),to_integer(unsigned('0' & ap_const_lv8_1(8-1 downto 0)))));
    tmp_13_fu_327_p3 <= x_assign_1_fu_323_p2(7 downto 7);
    tmp_14_fu_335_p2 <= std_logic_vector(shift_left(unsigned(x_assign_1_fu_323_p2),to_integer(unsigned('0' & ap_const_lv8_1(8-1 downto 0)))));
    tmp_15_fu_369_p3 <= x_assign_2_fu_365_p2(7 downto 7);
    tmp_16_fu_377_p2 <= std_logic_vector(shift_left(unsigned(x_assign_2_fu_365_p2),to_integer(unsigned('0' & ap_const_lv8_1(8-1 downto 0)))));
    tmp_17_fu_411_p3 <= x_assign_3_fu_407_p2(7 downto 7);
    tmp_18_fu_419_p2 <= std_logic_vector(shift_left(unsigned(x_assign_3_fu_407_p2),to_integer(unsigned('0' & ap_const_lv8_1(8-1 downto 0)))));
    tmp_2_cast_fu_208_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_202_p2),32));
    tmp_2_fu_202_p2 <= (tmp_10_fu_187_p1 or ap_const_lv4_1);
    tmp_2_i1_fu_341_p2 <= (tmp_14_fu_335_p2 xor ap_const_lv8_1B);
    tmp_2_i2_fu_383_p2 <= (tmp_16_fu_377_p2 xor ap_const_lv8_1B);
    tmp_2_i3_fu_425_p2 <= (tmp_18_fu_419_p2 xor ap_const_lv8_1B);
    tmp_2_i_fu_297_p2 <= (tmp_12_fu_292_p2 xor ap_const_lv8_1B);
    tmp_3_cast_fu_229_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_223_p2),32));
    tmp_3_fu_223_p2 <= (tmp_10_fu_187_p1 or ap_const_lv4_2);
    tmp_4_cast_fu_250_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_244_p2),32));
    tmp_4_fu_244_p2 <= (tmp_10_fu_187_p1 or ap_const_lv4_3);
    tmp_4_i1_fu_347_p3 <= 
        tmp_2_i1_fu_341_p2 when (tmp_13_fu_327_p3(0) = '1') else 
        tmp_14_fu_335_p2;
    tmp_4_i2_fu_389_p3 <= 
        tmp_2_i2_fu_383_p2 when (tmp_15_fu_369_p3(0) = '1') else 
        tmp_16_fu_377_p2;
    tmp_4_i3_fu_431_p3 <= 
        tmp_2_i3_fu_425_p2 when (tmp_17_fu_411_p3(0) = '1') else 
        tmp_18_fu_419_p2;
    tmp_4_i_fu_303_p3 <= 
        tmp_2_i_fu_297_p2 when (tmp_11_fu_285_p3(0) = '1') else 
        tmp_12_fu_292_p2;
    tmp_5_fu_360_p2 <= (tmp2_fu_355_p2 xor b_reg_496);
    tmp_6_fu_275_p2 <= (c_reg_503 xor x_assign_fu_271_p2);
    tmp_7_fu_402_p2 <= (tmp3_fu_397_p2 xor c_reg_503);
    tmp_8_fu_439_p2 <= (tmp_4_i3_fu_431_p3 xor tmp_6_reg_517);
    tmp_9_fu_317_p2 <= (tmp1_fu_311_p2 xor a_reg_489);
    tmp_fu_175_p3 <= i_phi_fu_168_p4(4 downto 4);
    tmp_s_fu_183_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_phi_fu_168_p4),32));
    x_assign_1_fu_323_p2 <= (c_reg_503 xor b_reg_496);
    x_assign_2_fu_365_p2 <= (d_reg_523 xor c_reg_503);
    x_assign_3_fu_407_p2 <= (d_reg_523 xor a_reg_489);
    x_assign_fu_271_p2 <= (b_reg_496 xor a_reg_489);
end behav;
