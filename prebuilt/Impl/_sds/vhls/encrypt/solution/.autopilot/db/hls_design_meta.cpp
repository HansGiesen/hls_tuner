#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_start", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_done", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_idle", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_ready", 1, hls_out, -1, "", "", 1),
	Port_Property("m_axi_ctx_key_AWVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_ctx_key_AWREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_ctx_key_AWADDR", 32, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_ctx_key_AWID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_ctx_key_AWLEN", 8, hls_out, 0, "m_axi", "LEN", 1),
	Port_Property("m_axi_ctx_key_AWSIZE", 3, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_ctx_key_AWBURST", 2, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_ctx_key_AWLOCK", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_ctx_key_AWCACHE", 4, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_ctx_key_AWPROT", 3, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_ctx_key_AWQOS", 4, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_ctx_key_AWREGION", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_ctx_key_AWUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_ctx_key_WVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_ctx_key_WREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_ctx_key_WDATA", 32, hls_out, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_ctx_key_WSTRB", 4, hls_out, 0, "m_axi", "STRB", 1),
	Port_Property("m_axi_ctx_key_WLAST", 1, hls_out, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_ctx_key_WID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_ctx_key_WUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_ctx_key_ARVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_ctx_key_ARREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_ctx_key_ARADDR", 32, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_ctx_key_ARID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_ctx_key_ARLEN", 8, hls_out, 0, "m_axi", "LEN", 1),
	Port_Property("m_axi_ctx_key_ARSIZE", 3, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_ctx_key_ARBURST", 2, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_ctx_key_ARLOCK", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_ctx_key_ARCACHE", 4, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_ctx_key_ARPROT", 3, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_ctx_key_ARQOS", 4, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_ctx_key_ARREGION", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_ctx_key_ARUSER", 1, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_ctx_key_RVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_ctx_key_RREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_ctx_key_RDATA", 32, hls_in, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_ctx_key_RLAST", 1, hls_in, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_ctx_key_RID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_ctx_key_RUSER", 1, hls_in, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_ctx_key_RRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_ctx_key_BVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_ctx_key_BREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_ctx_key_BRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_ctx_key_BID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_ctx_key_BUSER", 1, hls_in, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_ctx_enckey_AWVALID", 1, hls_out, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_ctx_enckey_AWREADY", 1, hls_in, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_ctx_enckey_AWADDR", 32, hls_out, 1, "m_axi", "ADDR", 1),
	Port_Property("m_axi_ctx_enckey_AWID", 1, hls_out, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_ctx_enckey_AWLEN", 8, hls_out, 1, "m_axi", "LEN", 1),
	Port_Property("m_axi_ctx_enckey_AWSIZE", 3, hls_out, 1, "m_axi", "SIZE", 1),
	Port_Property("m_axi_ctx_enckey_AWBURST", 2, hls_out, 1, "m_axi", "BURST", 1),
	Port_Property("m_axi_ctx_enckey_AWLOCK", 2, hls_out, 1, "m_axi", "LOCK", 1),
	Port_Property("m_axi_ctx_enckey_AWCACHE", 4, hls_out, 1, "m_axi", "CACHE", 1),
	Port_Property("m_axi_ctx_enckey_AWPROT", 3, hls_out, 1, "m_axi", "PROT", 1),
	Port_Property("m_axi_ctx_enckey_AWQOS", 4, hls_out, 1, "m_axi", "QOS", 1),
	Port_Property("m_axi_ctx_enckey_AWREGION", 4, hls_out, 1, "m_axi", "REGION", 1),
	Port_Property("m_axi_ctx_enckey_AWUSER", 1, hls_out, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_ctx_enckey_WVALID", 1, hls_out, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_ctx_enckey_WREADY", 1, hls_in, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_ctx_enckey_WDATA", 32, hls_out, 1, "m_axi", "DATA", 1),
	Port_Property("m_axi_ctx_enckey_WSTRB", 4, hls_out, 1, "m_axi", "STRB", 1),
	Port_Property("m_axi_ctx_enckey_WLAST", 1, hls_out, 1, "m_axi", "LAST", 1),
	Port_Property("m_axi_ctx_enckey_WID", 1, hls_out, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_ctx_enckey_WUSER", 1, hls_out, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_ctx_enckey_ARVALID", 1, hls_out, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_ctx_enckey_ARREADY", 1, hls_in, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_ctx_enckey_ARADDR", 32, hls_out, 1, "m_axi", "ADDR", 1),
	Port_Property("m_axi_ctx_enckey_ARID", 1, hls_out, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_ctx_enckey_ARLEN", 8, hls_out, 1, "m_axi", "LEN", 1),
	Port_Property("m_axi_ctx_enckey_ARSIZE", 3, hls_out, 1, "m_axi", "SIZE", 1),
	Port_Property("m_axi_ctx_enckey_ARBURST", 2, hls_out, 1, "m_axi", "BURST", 1),
	Port_Property("m_axi_ctx_enckey_ARLOCK", 2, hls_out, 1, "m_axi", "LOCK", 1),
	Port_Property("m_axi_ctx_enckey_ARCACHE", 4, hls_out, 1, "m_axi", "CACHE", 1),
	Port_Property("m_axi_ctx_enckey_ARPROT", 3, hls_out, 1, "m_axi", "PROT", 1),
	Port_Property("m_axi_ctx_enckey_ARQOS", 4, hls_out, 1, "m_axi", "QOS", 1),
	Port_Property("m_axi_ctx_enckey_ARREGION", 4, hls_out, 1, "m_axi", "REGION", 1),
	Port_Property("m_axi_ctx_enckey_ARUSER", 1, hls_out, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_ctx_enckey_RVALID", 1, hls_in, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_ctx_enckey_RREADY", 1, hls_out, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_ctx_enckey_RDATA", 32, hls_in, 1, "m_axi", "DATA", 1),
	Port_Property("m_axi_ctx_enckey_RLAST", 1, hls_in, 1, "m_axi", "LAST", 1),
	Port_Property("m_axi_ctx_enckey_RID", 1, hls_in, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_ctx_enckey_RUSER", 1, hls_in, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_ctx_enckey_RRESP", 2, hls_in, 1, "m_axi", "RESP", 1),
	Port_Property("m_axi_ctx_enckey_BVALID", 1, hls_in, 1, "m_axi", "VALID", 1),
	Port_Property("m_axi_ctx_enckey_BREADY", 1, hls_out, 1, "m_axi", "READY", 1),
	Port_Property("m_axi_ctx_enckey_BRESP", 2, hls_in, 1, "m_axi", "RESP", 1),
	Port_Property("m_axi_ctx_enckey_BID", 1, hls_in, 1, "m_axi", "ID", 1),
	Port_Property("m_axi_ctx_enckey_BUSER", 1, hls_in, 1, "m_axi", "USER", 1),
	Port_Property("m_axi_ctx_deckey_AWVALID", 1, hls_out, 2, "m_axi", "VALID", 1),
	Port_Property("m_axi_ctx_deckey_AWREADY", 1, hls_in, 2, "m_axi", "READY", 1),
	Port_Property("m_axi_ctx_deckey_AWADDR", 32, hls_out, 2, "m_axi", "ADDR", 1),
	Port_Property("m_axi_ctx_deckey_AWID", 1, hls_out, 2, "m_axi", "ID", 1),
	Port_Property("m_axi_ctx_deckey_AWLEN", 8, hls_out, 2, "m_axi", "LEN", 1),
	Port_Property("m_axi_ctx_deckey_AWSIZE", 3, hls_out, 2, "m_axi", "SIZE", 1),
	Port_Property("m_axi_ctx_deckey_AWBURST", 2, hls_out, 2, "m_axi", "BURST", 1),
	Port_Property("m_axi_ctx_deckey_AWLOCK", 2, hls_out, 2, "m_axi", "LOCK", 1),
	Port_Property("m_axi_ctx_deckey_AWCACHE", 4, hls_out, 2, "m_axi", "CACHE", 1),
	Port_Property("m_axi_ctx_deckey_AWPROT", 3, hls_out, 2, "m_axi", "PROT", 1),
	Port_Property("m_axi_ctx_deckey_AWQOS", 4, hls_out, 2, "m_axi", "QOS", 1),
	Port_Property("m_axi_ctx_deckey_AWREGION", 4, hls_out, 2, "m_axi", "REGION", 1),
	Port_Property("m_axi_ctx_deckey_AWUSER", 1, hls_out, 2, "m_axi", "USER", 1),
	Port_Property("m_axi_ctx_deckey_WVALID", 1, hls_out, 2, "m_axi", "VALID", 1),
	Port_Property("m_axi_ctx_deckey_WREADY", 1, hls_in, 2, "m_axi", "READY", 1),
	Port_Property("m_axi_ctx_deckey_WDATA", 32, hls_out, 2, "m_axi", "DATA", 1),
	Port_Property("m_axi_ctx_deckey_WSTRB", 4, hls_out, 2, "m_axi", "STRB", 1),
	Port_Property("m_axi_ctx_deckey_WLAST", 1, hls_out, 2, "m_axi", "LAST", 1),
	Port_Property("m_axi_ctx_deckey_WID", 1, hls_out, 2, "m_axi", "ID", 1),
	Port_Property("m_axi_ctx_deckey_WUSER", 1, hls_out, 2, "m_axi", "USER", 1),
	Port_Property("m_axi_ctx_deckey_ARVALID", 1, hls_out, 2, "m_axi", "VALID", 1),
	Port_Property("m_axi_ctx_deckey_ARREADY", 1, hls_in, 2, "m_axi", "READY", 1),
	Port_Property("m_axi_ctx_deckey_ARADDR", 32, hls_out, 2, "m_axi", "ADDR", 1),
	Port_Property("m_axi_ctx_deckey_ARID", 1, hls_out, 2, "m_axi", "ID", 1),
	Port_Property("m_axi_ctx_deckey_ARLEN", 8, hls_out, 2, "m_axi", "LEN", 1),
	Port_Property("m_axi_ctx_deckey_ARSIZE", 3, hls_out, 2, "m_axi", "SIZE", 1),
	Port_Property("m_axi_ctx_deckey_ARBURST", 2, hls_out, 2, "m_axi", "BURST", 1),
	Port_Property("m_axi_ctx_deckey_ARLOCK", 2, hls_out, 2, "m_axi", "LOCK", 1),
	Port_Property("m_axi_ctx_deckey_ARCACHE", 4, hls_out, 2, "m_axi", "CACHE", 1),
	Port_Property("m_axi_ctx_deckey_ARPROT", 3, hls_out, 2, "m_axi", "PROT", 1),
	Port_Property("m_axi_ctx_deckey_ARQOS", 4, hls_out, 2, "m_axi", "QOS", 1),
	Port_Property("m_axi_ctx_deckey_ARREGION", 4, hls_out, 2, "m_axi", "REGION", 1),
	Port_Property("m_axi_ctx_deckey_ARUSER", 1, hls_out, 2, "m_axi", "USER", 1),
	Port_Property("m_axi_ctx_deckey_RVALID", 1, hls_in, 2, "m_axi", "VALID", 1),
	Port_Property("m_axi_ctx_deckey_RREADY", 1, hls_out, 2, "m_axi", "READY", 1),
	Port_Property("m_axi_ctx_deckey_RDATA", 32, hls_in, 2, "m_axi", "DATA", 1),
	Port_Property("m_axi_ctx_deckey_RLAST", 1, hls_in, 2, "m_axi", "LAST", 1),
	Port_Property("m_axi_ctx_deckey_RID", 1, hls_in, 2, "m_axi", "ID", 1),
	Port_Property("m_axi_ctx_deckey_RUSER", 1, hls_in, 2, "m_axi", "USER", 1),
	Port_Property("m_axi_ctx_deckey_RRESP", 2, hls_in, 2, "m_axi", "RESP", 1),
	Port_Property("m_axi_ctx_deckey_BVALID", 1, hls_in, 2, "m_axi", "VALID", 1),
	Port_Property("m_axi_ctx_deckey_BREADY", 1, hls_out, 2, "m_axi", "READY", 1),
	Port_Property("m_axi_ctx_deckey_BRESP", 2, hls_in, 2, "m_axi", "RESP", 1),
	Port_Property("m_axi_ctx_deckey_BID", 1, hls_in, 2, "m_axi", "ID", 1),
	Port_Property("m_axi_ctx_deckey_BUSER", 1, hls_in, 2, "m_axi", "USER", 1),
	Port_Property("m_axi_buf_r_AWVALID", 1, hls_out, 3, "m_axi", "VALID", 1),
	Port_Property("m_axi_buf_r_AWREADY", 1, hls_in, 3, "m_axi", "READY", 1),
	Port_Property("m_axi_buf_r_AWADDR", 32, hls_out, 3, "m_axi", "ADDR", 1),
	Port_Property("m_axi_buf_r_AWID", 1, hls_out, 3, "m_axi", "ID", 1),
	Port_Property("m_axi_buf_r_AWLEN", 8, hls_out, 3, "m_axi", "LEN", 1),
	Port_Property("m_axi_buf_r_AWSIZE", 3, hls_out, 3, "m_axi", "SIZE", 1),
	Port_Property("m_axi_buf_r_AWBURST", 2, hls_out, 3, "m_axi", "BURST", 1),
	Port_Property("m_axi_buf_r_AWLOCK", 2, hls_out, 3, "m_axi", "LOCK", 1),
	Port_Property("m_axi_buf_r_AWCACHE", 4, hls_out, 3, "m_axi", "CACHE", 1),
	Port_Property("m_axi_buf_r_AWPROT", 3, hls_out, 3, "m_axi", "PROT", 1),
	Port_Property("m_axi_buf_r_AWQOS", 4, hls_out, 3, "m_axi", "QOS", 1),
	Port_Property("m_axi_buf_r_AWREGION", 4, hls_out, 3, "m_axi", "REGION", 1),
	Port_Property("m_axi_buf_r_AWUSER", 1, hls_out, 3, "m_axi", "USER", 1),
	Port_Property("m_axi_buf_r_WVALID", 1, hls_out, 3, "m_axi", "VALID", 1),
	Port_Property("m_axi_buf_r_WREADY", 1, hls_in, 3, "m_axi", "READY", 1),
	Port_Property("m_axi_buf_r_WDATA", 32, hls_out, 3, "m_axi", "DATA", 1),
	Port_Property("m_axi_buf_r_WSTRB", 4, hls_out, 3, "m_axi", "STRB", 1),
	Port_Property("m_axi_buf_r_WLAST", 1, hls_out, 3, "m_axi", "LAST", 1),
	Port_Property("m_axi_buf_r_WID", 1, hls_out, 3, "m_axi", "ID", 1),
	Port_Property("m_axi_buf_r_WUSER", 1, hls_out, 3, "m_axi", "USER", 1),
	Port_Property("m_axi_buf_r_ARVALID", 1, hls_out, 3, "m_axi", "VALID", 1),
	Port_Property("m_axi_buf_r_ARREADY", 1, hls_in, 3, "m_axi", "READY", 1),
	Port_Property("m_axi_buf_r_ARADDR", 32, hls_out, 3, "m_axi", "ADDR", 1),
	Port_Property("m_axi_buf_r_ARID", 1, hls_out, 3, "m_axi", "ID", 1),
	Port_Property("m_axi_buf_r_ARLEN", 8, hls_out, 3, "m_axi", "LEN", 1),
	Port_Property("m_axi_buf_r_ARSIZE", 3, hls_out, 3, "m_axi", "SIZE", 1),
	Port_Property("m_axi_buf_r_ARBURST", 2, hls_out, 3, "m_axi", "BURST", 1),
	Port_Property("m_axi_buf_r_ARLOCK", 2, hls_out, 3, "m_axi", "LOCK", 1),
	Port_Property("m_axi_buf_r_ARCACHE", 4, hls_out, 3, "m_axi", "CACHE", 1),
	Port_Property("m_axi_buf_r_ARPROT", 3, hls_out, 3, "m_axi", "PROT", 1),
	Port_Property("m_axi_buf_r_ARQOS", 4, hls_out, 3, "m_axi", "QOS", 1),
	Port_Property("m_axi_buf_r_ARREGION", 4, hls_out, 3, "m_axi", "REGION", 1),
	Port_Property("m_axi_buf_r_ARUSER", 1, hls_out, 3, "m_axi", "USER", 1),
	Port_Property("m_axi_buf_r_RVALID", 1, hls_in, 3, "m_axi", "VALID", 1),
	Port_Property("m_axi_buf_r_RREADY", 1, hls_out, 3, "m_axi", "READY", 1),
	Port_Property("m_axi_buf_r_RDATA", 32, hls_in, 3, "m_axi", "DATA", 1),
	Port_Property("m_axi_buf_r_RLAST", 1, hls_in, 3, "m_axi", "LAST", 1),
	Port_Property("m_axi_buf_r_RID", 1, hls_in, 3, "m_axi", "ID", 1),
	Port_Property("m_axi_buf_r_RUSER", 1, hls_in, 3, "m_axi", "USER", 1),
	Port_Property("m_axi_buf_r_RRESP", 2, hls_in, 3, "m_axi", "RESP", 1),
	Port_Property("m_axi_buf_r_BVALID", 1, hls_in, 3, "m_axi", "VALID", 1),
	Port_Property("m_axi_buf_r_BREADY", 1, hls_out, 3, "m_axi", "READY", 1),
	Port_Property("m_axi_buf_r_BRESP", 2, hls_in, 3, "m_axi", "RESP", 1),
	Port_Property("m_axi_buf_r_BID", 1, hls_in, 3, "m_axi", "ID", 1),
	Port_Property("m_axi_buf_r_BUSER", 1, hls_in, 3, "m_axi", "USER", 1),
	Port_Property("ctx_key_offset", 32, hls_in, 4, "ap_none", "in_data", 1),
	Port_Property("ctx_enckey_offset", 32, hls_in, 5, "ap_none", "in_data", 1),
	Port_Property("ctx_deckey_offset", 32, hls_in, 6, "ap_none", "in_data", 1),
	Port_Property("k_Addr_A", 32, hls_out, 7, "bram", "mem_address", 1),
	Port_Property("k_EN_A", 1, hls_out, 7, "bram", "mem_ce", 1),
	Port_Property("k_WEN_A", 1, hls_out, 7, "bram", "mem_we", 1),
	Port_Property("k_Din_A", 8, hls_out, 7, "bram", "mem_din", 1),
	Port_Property("k_Dout_A", 8, hls_in, 7, "bram", "mem_dout", 1),
	Port_Property("k_Clk_A", 1, hls_out, 7, "bram", "mem_clk", 1),
	Port_Property("k_Rst_A", 1, hls_out, 7, "bram", "mem_rst", 1),
	Port_Property("buf_offset", 32, hls_in, 8, "ap_none", "in_data", 1),
};
const char* HLS_Design_Meta::dut_name = "encrypt";
