// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "cholesky_top.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic cholesky_top::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic cholesky_top::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<9> cholesky_top::ap_ST_fsm_state1 = "1";
const sc_lv<9> cholesky_top::ap_ST_fsm_state2 = "10";
const sc_lv<9> cholesky_top::ap_ST_fsm_state3 = "100";
const sc_lv<9> cholesky_top::ap_ST_fsm_state4 = "1000";
const sc_lv<9> cholesky_top::ap_ST_fsm_state5 = "10000";
const sc_lv<9> cholesky_top::ap_ST_fsm_state6 = "100000";
const sc_lv<9> cholesky_top::ap_ST_fsm_state7 = "1000000";
const sc_lv<9> cholesky_top::ap_ST_fsm_state8 = "10000000";
const sc_lv<9> cholesky_top::ap_ST_fsm_state9 = "100000000";
const sc_lv<32> cholesky_top::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> cholesky_top::ap_const_lv32_1 = "1";
const sc_lv<1> cholesky_top::ap_const_lv1_0 = "0";
const sc_lv<32> cholesky_top::ap_const_lv32_2 = "10";
const sc_lv<32> cholesky_top::ap_const_lv32_5 = "101";
const sc_lv<32> cholesky_top::ap_const_lv32_6 = "110";
const sc_lv<7> cholesky_top::ap_const_lv7_0 = "0000000";
const sc_lv<1> cholesky_top::ap_const_lv1_1 = "1";
const sc_lv<32> cholesky_top::ap_const_lv32_3 = "11";
const sc_lv<32> cholesky_top::ap_const_lv32_4 = "100";
const sc_lv<32> cholesky_top::ap_const_lv32_7 = "111";
const sc_lv<7> cholesky_top::ap_const_lv7_42 = "1000010";
const sc_lv<7> cholesky_top::ap_const_lv7_1 = "1";
const sc_lv<6> cholesky_top::ap_const_lv6_0 = "000000";
const sc_lv<32> cholesky_top::ap_const_lv32_8 = "1000";
const bool cholesky_top::ap_const_boolean_1 = true;

cholesky_top::cholesky_top(sc_module_name name) : sc_module(name), mVcdFile(0) {
    a_i_U = new cholesky_top_a_i("a_i_U");
    a_i_U->clk(ap_clk);
    a_i_U->reset(ap_rst);
    a_i_U->address0(a_i_address0);
    a_i_U->ce0(a_i_ce0);
    a_i_U->we0(a_i_we0);
    a_i_U->d0(A_q0);
    a_i_U->q0(a_i_q0);
    L_assign_U = new cholesky_top_a_i("L_assign_U");
    L_assign_U->clk(ap_clk);
    L_assign_U->reset(ap_rst);
    L_assign_U->address0(L_assign_address0);
    L_assign_U->ce0(L_assign_ce0);
    L_assign_U->we0(L_assign_we0);
    L_assign_U->d0(grp_cholesky_alt_fu_169_L_d0);
    L_assign_U->q0(L_assign_q0);
    grp_cholesky_alt_fu_169 = new cholesky_alt("grp_cholesky_alt_fu_169");
    grp_cholesky_alt_fu_169->ap_clk(ap_clk);
    grp_cholesky_alt_fu_169->ap_rst(ap_rst);
    grp_cholesky_alt_fu_169->ap_start(grp_cholesky_alt_fu_169_ap_start);
    grp_cholesky_alt_fu_169->ap_done(grp_cholesky_alt_fu_169_ap_done);
    grp_cholesky_alt_fu_169->ap_idle(grp_cholesky_alt_fu_169_ap_idle);
    grp_cholesky_alt_fu_169->ap_ready(grp_cholesky_alt_fu_169_ap_ready);
    grp_cholesky_alt_fu_169->A_address0(grp_cholesky_alt_fu_169_A_address0);
    grp_cholesky_alt_fu_169->A_ce0(grp_cholesky_alt_fu_169_A_ce0);
    grp_cholesky_alt_fu_169->A_q0(a_i_q0);
    grp_cholesky_alt_fu_169->L_address0(grp_cholesky_alt_fu_169_L_address0);
    grp_cholesky_alt_fu_169->L_ce0(grp_cholesky_alt_fu_169_L_ce0);
    grp_cholesky_alt_fu_169->L_we0(grp_cholesky_alt_fu_169_L_we0);
    grp_cholesky_alt_fu_169->L_d0(grp_cholesky_alt_fu_169_L_d0);
    grp_cholesky_alt_fu_169->ap_return(grp_cholesky_alt_fu_169_ap_return);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_A_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln47_3_fu_238_p1 );

    SC_METHOD(thread_A_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_L_address0);
    sensitive << ( zext_ln60_3_reg_376 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_L_assign_address0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( zext_ln60_3_fu_312_p1 );
    sensitive << ( grp_cholesky_alt_fu_169_L_address0 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_L_assign_ce0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_cholesky_alt_fu_169_L_ce0 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_L_assign_we0);
    sensitive << ( grp_cholesky_alt_fu_169_L_we0 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_L_ce0);
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_L_d0);
    sensitive << ( L_assign_q0 );
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_L_we0);
    sensitive << ( ap_CS_fsm_state8 );

    SC_METHOD(thread_a_i_address0);
    sensitive << ( zext_ln47_3_reg_342 );
    sensitive << ( grp_cholesky_alt_fu_169_A_address0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_a_i_ce0);
    sensitive << ( grp_cholesky_alt_fu_169_A_ce0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_a_i_we0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_add_ln47_1_fu_233_p2);
    sensitive << ( add_ln47_reg_329 );
    sensitive << ( zext_ln47_2_fu_229_p1 );

    SC_METHOD(thread_add_ln47_fu_211_p2);
    sensitive << ( zext_ln47_1_fu_207_p1 );
    sensitive << ( zext_ln47_fu_195_p1 );

    SC_METHOD(thread_add_ln60_1_fu_307_p2);
    sensitive << ( add_ln60_reg_363 );
    sensitive << ( zext_ln60_2_fu_303_p1 );

    SC_METHOD(thread_add_ln60_fu_285_p2);
    sensitive << ( zext_ln60_1_fu_281_p1 );
    sensitive << ( zext_ln60_fu_269_p1 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_ap_return);
    sensitive << ( p_0_reg_156 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_c_1_fu_297_p2);
    sensitive << ( c2_0_reg_145 );

    SC_METHOD(thread_c_fu_223_p2);
    sensitive << ( c_0_reg_123 );

    SC_METHOD(thread_grp_cholesky_alt_fu_169_ap_start);
    sensitive << ( grp_cholesky_alt_fu_169_ap_start_reg );

    SC_METHOD(thread_icmp_ln45_fu_175_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( r_0_reg_112 );

    SC_METHOD(thread_icmp_ln46_fu_217_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( c_0_reg_123 );

    SC_METHOD(thread_icmp_ln52_fu_243_p2);
    sensitive << ( grp_cholesky_alt_fu_169_ap_done );
    sensitive << ( grp_cholesky_alt_fu_169_ap_return );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_icmp_ln58_fu_249_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( r1_0_reg_134 );

    SC_METHOD(thread_icmp_ln59_fu_291_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( c2_0_reg_145 );

    SC_METHOD(thread_r_1_fu_255_p2);
    sensitive << ( r1_0_reg_134 );

    SC_METHOD(thread_r_fu_181_p2);
    sensitive << ( r_0_reg_112 );

    SC_METHOD(thread_tmp_1_fu_199_p3);
    sensitive << ( r_0_reg_112 );

    SC_METHOD(thread_tmp_2_fu_261_p3);
    sensitive << ( r1_0_reg_134 );

    SC_METHOD(thread_tmp_3_fu_273_p3);
    sensitive << ( r1_0_reg_134 );

    SC_METHOD(thread_tmp_fu_187_p3);
    sensitive << ( r_0_reg_112 );

    SC_METHOD(thread_zext_ln47_1_fu_207_p1);
    sensitive << ( tmp_1_fu_199_p3 );

    SC_METHOD(thread_zext_ln47_2_fu_229_p1);
    sensitive << ( c_0_reg_123 );

    SC_METHOD(thread_zext_ln47_3_fu_238_p1);
    sensitive << ( add_ln47_1_fu_233_p2 );

    SC_METHOD(thread_zext_ln47_fu_195_p1);
    sensitive << ( tmp_fu_187_p3 );

    SC_METHOD(thread_zext_ln60_1_fu_281_p1);
    sensitive << ( tmp_3_fu_273_p3 );

    SC_METHOD(thread_zext_ln60_2_fu_303_p1);
    sensitive << ( c2_0_reg_145 );

    SC_METHOD(thread_zext_ln60_3_fu_312_p1);
    sensitive << ( add_ln60_1_fu_307_p2 );

    SC_METHOD(thread_zext_ln60_fu_269_p1);
    sensitive << ( tmp_2_fu_261_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln45_fu_175_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln46_fu_217_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln58_fu_249_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( icmp_ln59_fu_291_p2 );
    sensitive << ( grp_cholesky_alt_fu_169_ap_done );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln52_fu_243_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "000000001";
    grp_cholesky_alt_fu_169_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "cholesky_top_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, A_address0, "(port)A_address0");
    sc_trace(mVcdFile, A_ce0, "(port)A_ce0");
    sc_trace(mVcdFile, A_q0, "(port)A_q0");
    sc_trace(mVcdFile, L_address0, "(port)L_address0");
    sc_trace(mVcdFile, L_ce0, "(port)L_ce0");
    sc_trace(mVcdFile, L_we0, "(port)L_we0");
    sc_trace(mVcdFile, L_d0, "(port)L_d0");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, r_fu_181_p2, "r_fu_181_p2");
    sc_trace(mVcdFile, r_reg_324, "r_reg_324");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, add_ln47_fu_211_p2, "add_ln47_fu_211_p2");
    sc_trace(mVcdFile, add_ln47_reg_329, "add_ln47_reg_329");
    sc_trace(mVcdFile, icmp_ln45_fu_175_p2, "icmp_ln45_fu_175_p2");
    sc_trace(mVcdFile, c_fu_223_p2, "c_fu_223_p2");
    sc_trace(mVcdFile, c_reg_337, "c_reg_337");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, zext_ln47_3_fu_238_p1, "zext_ln47_3_fu_238_p1");
    sc_trace(mVcdFile, zext_ln47_3_reg_342, "zext_ln47_3_reg_342");
    sc_trace(mVcdFile, icmp_ln46_fu_217_p2, "icmp_ln46_fu_217_p2");
    sc_trace(mVcdFile, r_1_fu_255_p2, "r_1_fu_255_p2");
    sc_trace(mVcdFile, r_1_reg_358, "r_1_reg_358");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, add_ln60_fu_285_p2, "add_ln60_fu_285_p2");
    sc_trace(mVcdFile, add_ln60_reg_363, "add_ln60_reg_363");
    sc_trace(mVcdFile, icmp_ln58_fu_249_p2, "icmp_ln58_fu_249_p2");
    sc_trace(mVcdFile, c_1_fu_297_p2, "c_1_fu_297_p2");
    sc_trace(mVcdFile, c_1_reg_371, "c_1_reg_371");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, zext_ln60_3_fu_312_p1, "zext_ln60_3_fu_312_p1");
    sc_trace(mVcdFile, zext_ln60_3_reg_376, "zext_ln60_3_reg_376");
    sc_trace(mVcdFile, icmp_ln59_fu_291_p2, "icmp_ln59_fu_291_p2");
    sc_trace(mVcdFile, a_i_address0, "a_i_address0");
    sc_trace(mVcdFile, a_i_ce0, "a_i_ce0");
    sc_trace(mVcdFile, a_i_we0, "a_i_we0");
    sc_trace(mVcdFile, a_i_q0, "a_i_q0");
    sc_trace(mVcdFile, L_assign_address0, "L_assign_address0");
    sc_trace(mVcdFile, L_assign_ce0, "L_assign_ce0");
    sc_trace(mVcdFile, L_assign_we0, "L_assign_we0");
    sc_trace(mVcdFile, L_assign_q0, "L_assign_q0");
    sc_trace(mVcdFile, grp_cholesky_alt_fu_169_ap_start, "grp_cholesky_alt_fu_169_ap_start");
    sc_trace(mVcdFile, grp_cholesky_alt_fu_169_ap_done, "grp_cholesky_alt_fu_169_ap_done");
    sc_trace(mVcdFile, grp_cholesky_alt_fu_169_ap_idle, "grp_cholesky_alt_fu_169_ap_idle");
    sc_trace(mVcdFile, grp_cholesky_alt_fu_169_ap_ready, "grp_cholesky_alt_fu_169_ap_ready");
    sc_trace(mVcdFile, grp_cholesky_alt_fu_169_A_address0, "grp_cholesky_alt_fu_169_A_address0");
    sc_trace(mVcdFile, grp_cholesky_alt_fu_169_A_ce0, "grp_cholesky_alt_fu_169_A_ce0");
    sc_trace(mVcdFile, grp_cholesky_alt_fu_169_L_address0, "grp_cholesky_alt_fu_169_L_address0");
    sc_trace(mVcdFile, grp_cholesky_alt_fu_169_L_ce0, "grp_cholesky_alt_fu_169_L_ce0");
    sc_trace(mVcdFile, grp_cholesky_alt_fu_169_L_we0, "grp_cholesky_alt_fu_169_L_we0");
    sc_trace(mVcdFile, grp_cholesky_alt_fu_169_L_d0, "grp_cholesky_alt_fu_169_L_d0");
    sc_trace(mVcdFile, grp_cholesky_alt_fu_169_ap_return, "grp_cholesky_alt_fu_169_ap_return");
    sc_trace(mVcdFile, r_0_reg_112, "r_0_reg_112");
    sc_trace(mVcdFile, c_0_reg_123, "c_0_reg_123");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, r1_0_reg_134, "r1_0_reg_134");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, icmp_ln52_fu_243_p2, "icmp_ln52_fu_243_p2");
    sc_trace(mVcdFile, c2_0_reg_145, "c2_0_reg_145");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, p_0_reg_156, "p_0_reg_156");
    sc_trace(mVcdFile, grp_cholesky_alt_fu_169_ap_start_reg, "grp_cholesky_alt_fu_169_ap_start_reg");
    sc_trace(mVcdFile, tmp_fu_187_p3, "tmp_fu_187_p3");
    sc_trace(mVcdFile, tmp_1_fu_199_p3, "tmp_1_fu_199_p3");
    sc_trace(mVcdFile, zext_ln47_1_fu_207_p1, "zext_ln47_1_fu_207_p1");
    sc_trace(mVcdFile, zext_ln47_fu_195_p1, "zext_ln47_fu_195_p1");
    sc_trace(mVcdFile, zext_ln47_2_fu_229_p1, "zext_ln47_2_fu_229_p1");
    sc_trace(mVcdFile, add_ln47_1_fu_233_p2, "add_ln47_1_fu_233_p2");
    sc_trace(mVcdFile, tmp_2_fu_261_p3, "tmp_2_fu_261_p3");
    sc_trace(mVcdFile, tmp_3_fu_273_p3, "tmp_3_fu_273_p3");
    sc_trace(mVcdFile, zext_ln60_1_fu_281_p1, "zext_ln60_1_fu_281_p1");
    sc_trace(mVcdFile, zext_ln60_fu_269_p1, "zext_ln60_fu_269_p1");
    sc_trace(mVcdFile, zext_ln60_2_fu_303_p1, "zext_ln60_2_fu_303_p1");
    sc_trace(mVcdFile, add_ln60_1_fu_307_p2, "add_ln60_1_fu_307_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("cholesky_top.hdltvin.dat");
    mHdltvoutHandle.open("cholesky_top.hdltvout.dat");
}

cholesky_top::~cholesky_top() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete a_i_U;
    delete L_assign_U;
    delete grp_cholesky_alt_fu_169;
}

void cholesky_top::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        c2_0_reg_145 = c_1_reg_371.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln58_fu_249_p2.read()))) {
        c2_0_reg_145 = ap_const_lv7_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        c_0_reg_123 = c_reg_337.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln45_fu_175_p2.read(), ap_const_lv1_0))) {
        c_0_reg_123 = ap_const_lv7_0;
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_cholesky_alt_fu_169_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
             esl_seteq<1,1,1>(icmp_ln45_fu_175_p2.read(), ap_const_lv1_1))) {
            grp_cholesky_alt_fu_169_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_cholesky_alt_fu_169_ap_ready.read())) {
            grp_cholesky_alt_fu_169_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(icmp_ln58_fu_249_p2.read(), ap_const_lv1_1))) {
        p_0_reg_156 = ap_const_lv1_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(grp_cholesky_alt_fu_169_ap_done.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln52_fu_243_p2.read()))) {
        p_0_reg_156 = ap_const_lv1_1;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(grp_cholesky_alt_fu_169_ap_done.read(), ap_const_logic_1) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln52_fu_243_p2.read()))) {
        r1_0_reg_134 = ap_const_lv7_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                esl_seteq<1,1,1>(icmp_ln59_fu_291_p2.read(), ap_const_lv1_1))) {
        r1_0_reg_134 = r_1_reg_358.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln46_fu_217_p2.read(), ap_const_lv1_1))) {
        r_0_reg_112 = r_reg_324.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        r_0_reg_112 = ap_const_lv7_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln45_fu_175_p2.read(), ap_const_lv1_0))) {
        add_ln47_reg_329 = add_ln47_fu_211_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln58_fu_249_p2.read()))) {
        add_ln60_reg_363 = add_ln60_fu_285_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        c_1_reg_371 = c_1_fu_297_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        c_reg_337 = c_fu_223_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        r_1_reg_358 = r_1_fu_255_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        r_reg_324 = r_fu_181_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln46_fu_217_p2.read()))) {
        zext_ln47_3_reg_342 = zext_ln47_3_fu_238_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln59_fu_291_p2.read()))) {
        zext_ln60_3_reg_376 = zext_ln60_3_fu_312_p1.read();
    }
}

void cholesky_top::thread_A_address0() {
    A_address0 =  (sc_lv<13>) (zext_ln47_3_fu_238_p1.read());
}

void cholesky_top::thread_A_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        A_ce0 = ap_const_logic_1;
    } else {
        A_ce0 = ap_const_logic_0;
    }
}

void cholesky_top::thread_L_address0() {
    L_address0 =  (sc_lv<13>) (zext_ln60_3_reg_376.read());
}

void cholesky_top::thread_L_assign_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        L_assign_address0 =  (sc_lv<13>) (zext_ln60_3_fu_312_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        L_assign_address0 = grp_cholesky_alt_fu_169_L_address0.read();
    } else {
        L_assign_address0 = "XXXXXXXXXXXXX";
    }
}

void cholesky_top::thread_L_assign_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        L_assign_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        L_assign_ce0 = grp_cholesky_alt_fu_169_L_ce0.read();
    } else {
        L_assign_ce0 = ap_const_logic_0;
    }
}

void cholesky_top::thread_L_assign_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        L_assign_we0 = grp_cholesky_alt_fu_169_L_we0.read();
    } else {
        L_assign_we0 = ap_const_logic_0;
    }
}

void cholesky_top::thread_L_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        L_ce0 = ap_const_logic_1;
    } else {
        L_ce0 = ap_const_logic_0;
    }
}

void cholesky_top::thread_L_d0() {
    L_d0 = L_assign_q0.read();
}

void cholesky_top::thread_L_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        L_we0 = ap_const_logic_1;
    } else {
        L_we0 = ap_const_logic_0;
    }
}

void cholesky_top::thread_a_i_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        a_i_address0 =  (sc_lv<13>) (zext_ln47_3_reg_342.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        a_i_address0 = grp_cholesky_alt_fu_169_A_address0.read();
    } else {
        a_i_address0 = "XXXXXXXXXXXXX";
    }
}

void cholesky_top::thread_a_i_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        a_i_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        a_i_ce0 = grp_cholesky_alt_fu_169_A_ce0.read();
    } else {
        a_i_ce0 = ap_const_logic_0;
    }
}

void cholesky_top::thread_a_i_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        a_i_we0 = ap_const_logic_1;
    } else {
        a_i_we0 = ap_const_logic_0;
    }
}

void cholesky_top::thread_add_ln47_1_fu_233_p2() {
    add_ln47_1_fu_233_p2 = (!add_ln47_reg_329.read().is_01() || !zext_ln47_2_fu_229_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(add_ln47_reg_329.read()) + sc_biguint<14>(zext_ln47_2_fu_229_p1.read()));
}

void cholesky_top::thread_add_ln47_fu_211_p2() {
    add_ln47_fu_211_p2 = (!zext_ln47_1_fu_207_p1.read().is_01() || !zext_ln47_fu_195_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(zext_ln47_1_fu_207_p1.read()) + sc_biguint<14>(zext_ln47_fu_195_p1.read()));
}

void cholesky_top::thread_add_ln60_1_fu_307_p2() {
    add_ln60_1_fu_307_p2 = (!add_ln60_reg_363.read().is_01() || !zext_ln60_2_fu_303_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(add_ln60_reg_363.read()) + sc_biguint<14>(zext_ln60_2_fu_303_p1.read()));
}

void cholesky_top::thread_add_ln60_fu_285_p2() {
    add_ln60_fu_285_p2 = (!zext_ln60_1_fu_281_p1.read().is_01() || !zext_ln60_fu_269_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(zext_ln60_1_fu_281_p1.read()) + sc_biguint<14>(zext_ln60_fu_269_p1.read()));
}

void cholesky_top::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void cholesky_top::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void cholesky_top::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void cholesky_top::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void cholesky_top::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void cholesky_top::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void cholesky_top::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void cholesky_top::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void cholesky_top::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void cholesky_top::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void cholesky_top::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void cholesky_top::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void cholesky_top::thread_ap_return() {
    ap_return = esl_zext<32,1>(p_0_reg_156.read());
}

void cholesky_top::thread_c_1_fu_297_p2() {
    c_1_fu_297_p2 = (!c2_0_reg_145.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(c2_0_reg_145.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void cholesky_top::thread_c_fu_223_p2() {
    c_fu_223_p2 = (!c_0_reg_123.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(c_0_reg_123.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void cholesky_top::thread_grp_cholesky_alt_fu_169_ap_start() {
    grp_cholesky_alt_fu_169_ap_start = grp_cholesky_alt_fu_169_ap_start_reg.read();
}

void cholesky_top::thread_icmp_ln45_fu_175_p2() {
    icmp_ln45_fu_175_p2 = (!r_0_reg_112.read().is_01() || !ap_const_lv7_42.is_01())? sc_lv<1>(): sc_lv<1>(r_0_reg_112.read() == ap_const_lv7_42);
}

void cholesky_top::thread_icmp_ln46_fu_217_p2() {
    icmp_ln46_fu_217_p2 = (!c_0_reg_123.read().is_01() || !ap_const_lv7_42.is_01())? sc_lv<1>(): sc_lv<1>(c_0_reg_123.read() == ap_const_lv7_42);
}

void cholesky_top::thread_icmp_ln52_fu_243_p2() {
    icmp_ln52_fu_243_p2 = (!grp_cholesky_alt_fu_169_ap_return.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): sc_lv<1>(grp_cholesky_alt_fu_169_ap_return.read() == ap_const_lv32_0);
}

void cholesky_top::thread_icmp_ln58_fu_249_p2() {
    icmp_ln58_fu_249_p2 = (!r1_0_reg_134.read().is_01() || !ap_const_lv7_42.is_01())? sc_lv<1>(): sc_lv<1>(r1_0_reg_134.read() == ap_const_lv7_42);
}

void cholesky_top::thread_icmp_ln59_fu_291_p2() {
    icmp_ln59_fu_291_p2 = (!c2_0_reg_145.read().is_01() || !ap_const_lv7_42.is_01())? sc_lv<1>(): sc_lv<1>(c2_0_reg_145.read() == ap_const_lv7_42);
}

void cholesky_top::thread_r_1_fu_255_p2() {
    r_1_fu_255_p2 = (!r1_0_reg_134.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(r1_0_reg_134.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void cholesky_top::thread_r_fu_181_p2() {
    r_fu_181_p2 = (!r_0_reg_112.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(r_0_reg_112.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void cholesky_top::thread_tmp_1_fu_199_p3() {
    tmp_1_fu_199_p3 = esl_concat<7,1>(r_0_reg_112.read(), ap_const_lv1_0);
}

void cholesky_top::thread_tmp_2_fu_261_p3() {
    tmp_2_fu_261_p3 = esl_concat<7,6>(r1_0_reg_134.read(), ap_const_lv6_0);
}

void cholesky_top::thread_tmp_3_fu_273_p3() {
    tmp_3_fu_273_p3 = esl_concat<7,1>(r1_0_reg_134.read(), ap_const_lv1_0);
}

void cholesky_top::thread_tmp_fu_187_p3() {
    tmp_fu_187_p3 = esl_concat<7,6>(r_0_reg_112.read(), ap_const_lv6_0);
}

void cholesky_top::thread_zext_ln47_1_fu_207_p1() {
    zext_ln47_1_fu_207_p1 = esl_zext<14,8>(tmp_1_fu_199_p3.read());
}

void cholesky_top::thread_zext_ln47_2_fu_229_p1() {
    zext_ln47_2_fu_229_p1 = esl_zext<14,7>(c_0_reg_123.read());
}

void cholesky_top::thread_zext_ln47_3_fu_238_p1() {
    zext_ln47_3_fu_238_p1 = esl_zext<64,14>(add_ln47_1_fu_233_p2.read());
}

void cholesky_top::thread_zext_ln47_fu_195_p1() {
    zext_ln47_fu_195_p1 = esl_zext<14,13>(tmp_fu_187_p3.read());
}

void cholesky_top::thread_zext_ln60_1_fu_281_p1() {
    zext_ln60_1_fu_281_p1 = esl_zext<14,8>(tmp_3_fu_273_p3.read());
}

void cholesky_top::thread_zext_ln60_2_fu_303_p1() {
    zext_ln60_2_fu_303_p1 = esl_zext<14,7>(c2_0_reg_145.read());
}

void cholesky_top::thread_zext_ln60_3_fu_312_p1() {
    zext_ln60_3_fu_312_p1 = esl_zext<64,14>(add_ln60_1_fu_307_p2.read());
}

void cholesky_top::thread_zext_ln60_fu_269_p1() {
    zext_ln60_fu_269_p1 = esl_zext<14,13>(tmp_2_fu_261_p3.read());
}

void cholesky_top::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln45_fu_175_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln46_fu_217_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(grp_cholesky_alt_fu_169_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln52_fu_243_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(grp_cholesky_alt_fu_169_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln52_fu_243_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(icmp_ln58_fu_249_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(icmp_ln59_fu_291_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<9>) ("XXXXXXXXX");
            break;
    }
}

void cholesky_top::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_address0\" :  \"" << A_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_ce0\" :  \"" << A_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"A_q0\" :  \"" << A_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"L_address0\" :  \"" << L_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"L_ce0\" :  \"" << L_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"L_we0\" :  \"" << L_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"L_d0\" :  \"" << L_d0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_return\" :  \"" << ap_return.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

